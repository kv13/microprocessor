.include "m16def.inc"
.def command=R5
.def clock1=R20
.def stage=R1
rjmp RESET
RESET:
	clr stage
	clr clock1
	clr command
	ldi r16,0b11111111
    out DDRB,r16
    out PORTB,r16
    ldi r16,0
    out DDRD,r16






;Initialize stack pointer because we will use some functions\
ldi r16,low(RAMEND)
out SPL,r16
ldi r16,high(RAMEND)
out SPH,r16




START:
	in r17,pind
	cpi r17,0b10111111
	brne START
	rcall RELEASEBUTTON
	rcall CLOCKFOR10SECRESET
	ldi r16,0b0000000
	cp command,r16
	brne START_3
START_1:
	in r17,pind
	ori r17,0b11000011
	cpi r17,0b11111111
	brne START_2
	rcall CLOCK10SEC
	rjmp START_1
START_2:
	in r18,pind
	rcall RELEASEBUTTON
	ldi r16,0b00000001
	mov stage,r16
	mov command,r18
	rjmp START
START_3:
	in r17,pind 
	ori r17,0b11111101
	cpi r17,0b11111111
	brne SW1PRESSED
	rcall CLOCK10SEC
	rjmp START_3
START_3MAIN:
	rjmp MAINFUNC



SW1PRESSED:
	ldi r16,0b11111101
	out portb,r16
	rcall DELAY1SEC
	ldi r16,0b11111111
	out portb,r16
	rcall DELAY1SEC
	in r17,pind
	ori r17,0b11111101
	cpi r17,0b11111111
	brne MAINFUNC;that is not correct 
	rjmp SW1PRESSED

MAINFUNC:
	ldi r16,0b10111110
	out portb,r16
	rjmp MAINFUNC
	

DELAY1SEC:

    ldi  r18, 21
    ldi  r19, 75
    ldi  r20, 191
L1: dec  r20
    brne L1
    dec  r19
    brne L1
    dec  r18
    brne L1
    nop



CLOCKFOR10SECRESET:
	ldi XH,HIGH(0xFFFF)
	ldi XL,LOW(0xFFFF)
	ldi clock1,0b0000000
	ret


CLOCK10SEC:
	sbiw X,0x01
	brne back
	inc clock1
	cpi clock1,0x26
	breq PASS10SEC
	back:
		ret
	
	
PASS10SEC:
	mov r16,stage
	cpi r16,0b00000000
	brne START_3MAIN
	ldi r16,0
	LOOP:
	out PORTB,R16
	rjmp LOOP


RELEASEBUTTON:
	in R17,pind
	cpi R17,0b11111111
	brne RELEASEBUTTON
	ldi R24, 104
	ldi R25, 229
L2: dec R25
	brne L2
	dec R24
	brne L2
	ret
